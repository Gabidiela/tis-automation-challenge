# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
- group: tis-group

pool:
  vmImage: $(vmImage)

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
  
- script: ls -al
  displayName: Visualizando Paths
- task: TerraformInstaller@1
  inputs:
    terraformVersion: $(terraformVersion)
  
- task: TerraformTaskV4@4
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/IAC'
    backendServiceAWS: 'AWS-Default'
    backendAWSBucketName: 'terraform-s3-bucket-stone'
    backendAWSKey: 'state/terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'aws'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/IAC'
    environmentServiceNameAWS: 'AWS-Default'

# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'aws'
#     command: 'init'
#     backendServiceAWS: 'AWS-Default'
#     backendAWSBucketName: 'terraform-s3-bucket-stone'
#     backendAWSKey: 'state/terraform.tfstate'

# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'aws'
#     command: 'apply'
#     environmentServiceNameAWS: 'AWS-Default'